name: Java CI with Maven + Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Run Maven tests (continue even if some fail)
      - name: Run Maven tests
        run: mvn clean test -Dsurefire.failIfNoTests=false
        continue-on-error: true

      # Step 5: Generate Allure report
      - name: Generate Allure report
        run: |
          mkdir -p target/allure-results
          if [ "$(ls -A target/allure-results 2>/dev/null)" ]; then
            echo "Allure results found, generating report..."
            mvn allure:report -Dallure.report.directory=target/allure-report
          else
            echo "‚ö†Ô∏è No Allure results found. Creating placeholder report."
            mkdir -p target/allure-report
            echo "<html><body><h2>No Allure results found</h2></body></html>" > target/allure-report/index.html
          fi

      # Step 6: Upload Allure report as artifact
      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report
          if-no-files-found: warn

      # Step 7: Deploy Allure report to GitHub Pages
      - name: Deploy Allure report to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report/  # ‚úÖ trailing slash ensures contents are deployed
          keep_files: false
          force_orphan: true
          publish_branch: gh-pages
          allow_empty_commit: false
          enable_jekyll: false

      # Step 8: Add clickable report link to workflow summary
      - name: Add Allure report link to workflow summary
        if: github.ref == 'refs/heads/main'
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "### üßæ Allure Report" >> $GITHUB_STEP_SUMMARY
          echo "üîó **[View Allure Report]($REPORT_URL)**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Report published at: $REPORT_URL"
